{"version":3,"file":"module.js","mappings":"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","sources":["webpack://camptocamp-prometheus-alertmanager-datasource/external amd \"@grafana/data\"","webpack://camptocamp-prometheus-alertmanager-datasource/external amd \"@grafana/runtime\"","webpack://camptocamp-prometheus-alertmanager-datasource/external amd \"@grafana/ui\"","webpack://camptocamp-prometheus-alertmanager-datasource/external amd \"react\"","webpack://camptocamp-prometheus-alertmanager-datasource/external amd \"rxjs\"","webpack://camptocamp-prometheus-alertmanager-datasource/webpack/bootstrap","webpack://camptocamp-prometheus-alertmanager-datasource/webpack/runtime/compat get default export","webpack://camptocamp-prometheus-alertmanager-datasource/webpack/runtime/define property getters","webpack://camptocamp-prometheus-alertmanager-datasource/webpack/runtime/hasOwnProperty shorthand","webpack://camptocamp-prometheus-alertmanager-datasource/webpack/runtime/make namespace object","webpack://camptocamp-prometheus-alertmanager-datasource/./types.ts","webpack://camptocamp-prometheus-alertmanager-datasource/./datasource.ts","webpack://camptocamp-prometheus-alertmanager-datasource/./module.ts","webpack://camptocamp-prometheus-alertmanager-datasource/./components/ConfigEditor.tsx","webpack://camptocamp-prometheus-alertmanager-datasource/./components/QueryEditor.tsx"],"sourcesContent":["module.exports = __WEBPACK_EXTERNAL_MODULE__781__;","module.exports = __WEBPACK_EXTERNAL_MODULE__531__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7__;","module.exports = __WEBPACK_EXTERNAL_MODULE__959__;","module.exports = __WEBPACK_EXTERNAL_MODULE__269__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { DataSourceJsonData, DataQueryRequest } from '@grafana/data';\nimport { DataQuery } from '@grafana/schema';\n\nexport interface QueryRequest extends DataQueryRequest<CustomQuery> {\n  adhocFilters?: any[];\n}\n\nexport interface CustomQuery extends DataQuery {\n  target?: string;\n  receiver: string;\n  filters: string;\n  active: boolean;\n  silenced: boolean;\n  inhibited: boolean;\n}\n\nexport const DEFAULT_QUERY: Partial<CustomQuery> = {\n  active: true,\n  silenced: false,\n  inhibited: false,\n};\n\nexport interface GenericOptions extends DataSourceJsonData {}\n","import {\n  DataQueryResponse,\n  DataSourceApi,\n  DataSourceInstanceSettings,\n  MutableDataFrame,\n  FieldType,\n} from '@grafana/data';\nimport { getBackendSrv, getTemplateSrv } from '@grafana/runtime';\nimport { lastValueFrom } from 'rxjs';\nimport { GenericOptions, CustomQuery, QueryRequest, DEFAULT_QUERY } from './types';\n\nexport class AlertmanagerDataSource extends DataSourceApi<CustomQuery, GenericOptions> {\n  url: string;\n  withCredentials: boolean;\n  headers: any;\n\n  constructor(instanceSettings: DataSourceInstanceSettings<GenericOptions>) {\n    super(instanceSettings);\n\n    this.url = instanceSettings.url === undefined ? '' : instanceSettings.url;\n    this.withCredentials = instanceSettings.withCredentials !== undefined;\n    this.headers = { 'Content-Type': 'application/json' };\n    if (typeof instanceSettings.basicAuth === 'string' && instanceSettings.basicAuth.length > 0) {\n      this.headers['Authorization'] = instanceSettings.basicAuth;\n    }\n  }\n\n  async query(options: QueryRequest): Promise<DataQueryResponse> {\n    const promises = options.targets.map((query) => {\n      query = { ...DEFAULT_QUERY, ...query };\n      if (query.hide) {\n        return Promise.resolve(new MutableDataFrame());\n      }\n\n      let params: string[] = [];\n      params.push(`active=${query.active ? 'true' : 'false'}`);\n      params.push(`silenced=${query.silenced ? 'true' : 'false'}`);\n      params.push(`inhibited=${query.inhibited ? 'true' : 'false'}`);\n      if (query.receiver !== undefined && query.receiver.length > 0) {\n        params.push(`receiver=${query.receiver}`);\n      }\n      if (query.filters !== undefined && query.filters.length > 0) {\n        query.filters = getTemplateSrv().replace(query.filters, options.scopedVars, this.interpolateQueryExpr);\n        query.filters.split(',').forEach((value) => {\n          params.push(`filter=${encodeURIComponent(value)}`);\n        });\n      }\n\n      const request = this.doRequest({\n        url: `${this.url}/api/v2/alerts?${params.join('&')}`,\n        method: 'GET',\n      }).then((request) => lastValueFrom(request));\n\n      return request.then((data: any) => this.retrieveData(query, data));\n    });\n\n    return Promise.all(promises).then((data) => {\n      return { data };\n    });\n  }\n\n  async doRequest(options: any) {\n    options.withCredentials = this.withCredentials;\n    options.headers = this.headers;\n    return getBackendSrv().fetch(options);\n  }\n\n  async testDatasource() {\n    return this.doRequest({\n      url: this.url,\n      method: 'GET',\n    }).then((response) =>\n      lastValueFrom(response).then((data) => {\n        if (data !== undefined) {\n          if (data.ok) {\n            return { status: 'success', message: 'Datasource is working', title: 'Success' };\n          } else {\n            return {\n              status: 'error',\n              message: `Datasource is not working: ${data.data}`,\n              title: 'Error',\n            };\n          }\n        }\n        return {\n          status: 'error',\n          message: `Unknown error in datasource`,\n          title: 'Error',\n        };\n      })\n    );\n  }\n\n  buildDataFrame(refId: string, data: any): MutableDataFrame {\n    const fields = [\n      { name: 'Time', type: FieldType.time },\n      { name: 'SeverityValue', type: FieldType.number },\n    ];\n\n    if (data.length > 0) {\n      const annotations: string[] = data.map((alert: any) => Object.keys(alert.annotations)).flat();\n      const labels: string[] = data.map((alert: any) => Object.keys(alert.labels)).flat();\n      const alertstatus: string[] = ['alertstatus', 'alertstatus_code'];\n      const attributes: string[] = [...new Set([...annotations, ...labels, ...alertstatus])];\n\n      attributes.forEach((attribute: string) => {\n        fields.push({\n          name: attribute,\n          type: FieldType.string,\n        });\n      });\n    }\n\n    const frame = new MutableDataFrame({\n      refId: refId,\n      fields: fields,\n    });\n    return frame;\n  }\n\n  parseAlertAttributes(alert: any, fields: any[]): string[] {\n    let severityValue = 4;\n    switch (alert.labels['severity']) {\n      case 'critical':\n        severityValue = 1;\n        break;\n      case 'warning':\n        severityValue = 2;\n        break;\n      case 'info':\n        severityValue = 3;\n        break;\n      default:\n        break;\n    }\n\n    const row: string[] = [alert.startsAt, severityValue];\n    fields.slice(2).forEach((element: any) => {\n      row.push(alert.annotations[element.name] || alert.labels[element.name] || '');\n    });\n    return row;\n  }\n\n  retrieveData(query: any, data: any): Promise<MutableDataFrame> {\n    const frame = this.buildDataFrame(query.refId, data.data);\n    data.data.forEach((alert: any) => {\n      const row: string[] = this.parseAlertAttributes(alert, frame.fields);\n      frame.appendRow(row);\n    });\n    return Promise.resolve(frame);\n  }\n\n  interpolateQueryExpr(value: string | string[] = [], variable: any) {\n    // if no multi or include all do not regexEscape\n    if (!variable.multi && !variable.includeAll) {\n      return alertmanagerRegularEscape(value);\n    }\n\n    if (typeof value === 'string') {\n      return alertmanagerSpecialRegexEscape(value);\n    }\n\n    const escapedValues = value.map((val) => alertmanagerSpecialRegexEscape(val));\n    if (escapedValues.length === 1) {\n      return escapedValues[0];\n    }\n\n    return '(' + escapedValues.join('|') + ')';\n  }\n}\n\nexport function alertmanagerRegularEscape(value: any) {\n  return typeof value === 'string' ? value.replace(/\\\\/g, '\\\\\\\\').replace(/'/g, \"\\\\\\\\'\") : value;\n}\n\nexport function alertmanagerSpecialRegexEscape(value: any) {\n  return typeof value === 'string' ? value.replace(/\\\\/g, '\\\\\\\\\\\\\\\\').replace(/[$^*{}\\[\\]\\'+?()|]/g, '\\\\\\\\$&') : value;\n}\n","import { DataSourcePlugin } from '@grafana/data';\nimport { AlertmanagerDataSource } from './datasource';\nimport { ConfigEditor } from './components/ConfigEditor';\nimport { QueryEditor } from './components/QueryEditor';\nimport { CustomQuery, GenericOptions } from './types';\n\nexport const plugin = new DataSourcePlugin<AlertmanagerDataSource, CustomQuery, GenericOptions>(AlertmanagerDataSource)\n  .setConfigEditor(ConfigEditor)\n  .setQueryEditor(QueryEditor);\n","import React from 'react';\nimport { DataSourceHttpSettings } from '@grafana/ui';\nimport { DataSourcePluginOptionsEditorProps } from '@grafana/data';\nimport { GenericOptions } from '../types';\n\ninterface Props extends DataSourcePluginOptionsEditorProps<GenericOptions> {}\n\nexport function ConfigEditor(props: Props) {\n  const { onOptionsChange, options } = props;\n  return (\n    <div className=\"gf-form-group\">\n      <DataSourceHttpSettings\n        defaultUrl={'http://localhost:8080'}\n        dataSourceConfig={options}\n        showAccessOptions={true}\n        onChange={onOptionsChange}\n      />\n    </div>\n  );\n}\n","import React, { ChangeEvent } from 'react';\nimport { InlineFieldRow, InlineField, Input, InlineSwitch } from '@grafana/ui';\nimport { QueryEditorProps } from '@grafana/data';\nimport { AlertmanagerDataSource } from '../datasource';\nimport { GenericOptions, CustomQuery, DEFAULT_QUERY } from '../types';\n\ntype Props = QueryEditorProps<AlertmanagerDataSource, CustomQuery, GenericOptions>;\n\nexport function QueryEditor({ query, onChange, onRunQuery }: Props) {\n  const onReceiverChange = (event: ChangeEvent<HTMLInputElement>) => {\n    onChange({ ...query, receiver: event.target.value });\n    onRunQuery();\n  };\n\n  const onFiltersChange = (event: ChangeEvent<HTMLInputElement>) => {\n    onChange({ ...query, filters: event.target.value });\n    onRunQuery();\n  };\n\n  const onActiveChange = () => {\n    query.active = !query.active;\n    onChange({ ...query });\n    onRunQuery();\n  };\n\n  const onSilencedChange = () => {\n    query.silenced = !query.silenced;\n    onChange({ ...query });\n    onRunQuery();\n  };\n\n  const onInhibitedChange = () => {\n    query.inhibited = !query.inhibited;\n    onChange({ ...query });\n    onRunQuery();\n  };\n\n  const { receiver, filters, active, silenced, inhibited } = { ...DEFAULT_QUERY, ...query };\n\n  return (\n    <div>\n      <InlineFieldRow>\n        <InlineField label=\"Receiver\">\n          <Input name=\"Receiver input\" onChange={onReceiverChange} value={receiver} width={10} />\n        </InlineField>\n        <InlineField label=\"Filters (comma separated key=value)\">\n          <Input name=\"Filters input\" onChange={onFiltersChange} value={filters} width={30} />\n        </InlineField>\n      </InlineFieldRow>\n      <InlineFieldRow>\n        <InlineField label=\"Active\">\n          <InlineSwitch value={active} onChange={onActiveChange} />\n        </InlineField>\n        <InlineField label=\"Silenced\">\n          <InlineSwitch value={silenced} onChange={onSilencedChange} />\n        </InlineField>\n        <InlineField label=\"Inhibited\">\n          <InlineSwitch value={inhibited} onChange={onInhibitedChange} />\n        </InlineField>\n      </InlineFieldRow>\n    </div>\n  );\n}\n"],"names":["module","exports","__WEBPACK_EXTERNAL_MODULE__781__","__WEBPACK_EXTERNAL_MODULE__531__","__WEBPACK_EXTERNAL_MODULE__7__","__WEBPACK_EXTERNAL_MODULE__959__","__WEBPACK_EXTERNAL_MODULE__269__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","DEFAULT_QUERY","active","silenced","inhibited","AlertmanagerDataSource","DataSourceApi","query","options","promises","targets","map","hide","Promise","resolve","MutableDataFrame","params","push","receiver","length","filters","getTemplateSrv","replace","scopedVars","interpolateQueryExpr","split","forEach","encodeURIComponent","doRequest","url","join","method","then","request","lastValueFrom","data","retrieveData","all","withCredentials","headers","getBackendSrv","fetch","testDatasource","response","ok","status","message","title","buildDataFrame","refId","fields","name","type","FieldType","time","number","annotations","alert","keys","flat","labels","Set","attribute","string","parseAlertAttributes","severityValue","row","startsAt","slice","element","frame","this","appendRow","variable","multi","includeAll","alertmanagerRegularEscape","alertmanagerSpecialRegexEscape","escapedValues","val","constructor","instanceSettings","super","basicAuth","plugin","DataSourcePlugin","setConfigEditor","props","onOptionsChange","div","className","DataSourceHttpSettings","defaultUrl","dataSourceConfig","showAccessOptions","onChange","setQueryEditor","onRunQuery","InlineFieldRow","InlineField","label","Input","event","target","width","InlineSwitch"],"sourceRoot":""}