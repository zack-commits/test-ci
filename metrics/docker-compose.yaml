services:
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    hostname: prometheus
    volumes:
      - ./conf/prometheus.yml:/etc/prometheus/prometheus.yml  # 挂载本地的nginx.conf到容器中
      - ./prometheus:/prometheus #挂载本地的Prometheus 数据存储
    ports:
      - "9090:9090"  # 映射9090端口到主机
    restart: always
  # prometheus-exporter:
  #   image: prom/node-exporter
  #   container_name: prometheus-exporter
  #   hostname: prometheus-exporter
  #   ports:
  #     - 9100:9100
  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    hostname: grafana
    ports:
      - "3000:3000"  # 映射3000端口到主机
    restart: always
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin  # 设置管理员密码
    volumes:
      - ./conf/grafana.ini:/etc/grafana/grafana.ini  # 挂载本地的grafana.ini到容器中
      - ./grafana:/var/lib/grafana  # 挂载本地的数据目录到容器中
  goblog:
    image: mariomac/goblog:dev
    container_name: goblog
    hostname: goblog
    ports:
      # Exposes port 18843, forwarding it to container port 8443
      - "18443:8443"
  autoinstrumenter:
    image: grafana/beyla:latest
    container_name: beyla
    hostname: beyla
    # pid: "service:goblog"
    privileged: true
    # volumes:
      # - ./conf/beyla.yml:/etc/beyla/beyla.yml  # 挂载本地的grafana.ini到容器中
    environment:
      BEYLA_TRACE_PRINTER: text
      BEYLA_OPEN_PORT: 8080
      # BEYLA_CONFIG_PATH: /etc/beyla/beyla.yml
      # BEYLA_LOG_LEVEL: DEBUG
      # BEYLA_BPF_WAKEUP_LEN: 100
      # BEYLA_PROMETHEUS_PORT: 8999
      # BEYLA_PROMETHEUS_PATH: /metrics
      OTEL_EXPORTER_OTLP_PROTOCOL: "http/protobuf"
      OTEL_EXPORTER_OTLP_ENDPOINT: "https://otlp-gateway-prod-ap-northeast-0.grafana.net/otlp"
      OTEL_EXPORTER_OTLP_HEADERS: "Authorization=Basic MTAzNjYxNzpnbGNfZXlKdklqb2lNVEl5TURreE5DSXNJbTRpT2lKemRHRmpheTB4TURNMk5qRTNMVzkwYkhBdGQzSnBkR1V0ZEdWemRDSXNJbXNpT2lJMlUydDBOemR6T1RWdFdtSTNTREIxVlRZNVVsRlBPWE1pTENKdElqcDdJbklpT2lKd2NtOWtMV0Z3TFc1dmNuUm9aV0Z6ZEMwd0luMTk="
    # ports:
      # Exposes port 18843, forwarding it to container port 8443
      # - "8999:8999"
  # otel-collector:
  #   image: otel/opentelemetry-collector
  #   container_name: otel-collector
  #   hostname: otel-collector
  #   command: ["--config=/etc/otel-collector-config.yaml"]
  #   volumes:
  #     - ./conf/otel-collector-config.yaml:/etc/otel-collector-config.yaml
  #   ports:
  #     - "1888:1888"   # pprof extension
  #     - "8888:8888"   # Prometheus metrics exposed by the collector
  #     - "8889:8889"   # Prometheus exporter metrics
  #     - "13133:13133" # health_check extension
  #     - "4317:4317"   # OTLP gRPC receiver
  #     - "4318:4318"   # OTLP http receiver
  #     - "55679:55679" # zpages extension